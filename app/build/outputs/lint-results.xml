<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 23.0.2">

    <issue
        id="GradleDeprecated"
        severity="Warning"
        message="&apos;android&apos; is deprecated; use &apos;com.android.application&apos; instead"
        category="Correctness"
        priority="6"
        summary="Looks for deprecated Gradle constructs"
        explanation="This detector looks for deprecated Gradle constructs which currently work but will likely stop working in a future update."
        errorLine1="apply plugin: &apos;android&apos;"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/k/src/projects/mr808/app/build.gradle"
            line="9"
            column="1"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details."
        category="Correctness"
        priority="6"
        summary="Checks that the manifest specifies a targetSdkVersion that is recent"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.

To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        url="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        urls="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="      targetSdkVersion 19"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/k/src/projects/mr808/app/build.gradle"
            line="17"
            column="7"/>
    </issue>

    <issue
        id="GradleOverrides"
        severity="Warning"
        message="This versionCode value (1) is not used; it is always overridden by the value specified in the Gradle build script (1)"
        category="Correctness"
        priority="4"
        summary="Looks for values specified in the manifest file which are overridden by values in Gradle"
        explanation="The value of (for example) `minSdkVersion` is only used if it is not specified in the `build.gradle` build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity."
        errorLine1="      android:versionCode=&quot;1&quot;"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/k/src/projects/mr808/app/src/main/AndroidManifest.xml"
            line="4"
            column="7"/>
    </issue>

    <issue
        id="GradleOverrides"
        severity="Warning"
        message="This versionName value (1.0) is not used; it is always overridden by the value specified in the Gradle build script (1.0)"
        category="Correctness"
        priority="4"
        summary="Looks for values specified in the manifest file which are overridden by values in Gradle"
        explanation="The value of (for example) `minSdkVersion` is only used if it is not specified in the `build.gradle` build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity."
        errorLine1="      android:versionName=&quot;1.0&quot;>"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/k/src/projects/mr808/app/src/main/AndroidManifest.xml"
            line="5"
            column="7"/>
    </issue>

    <issue
        id="AllowBackup"
        severity="Warning"
        message="Should explicitly set android:allowBackup to true or false (it&apos;s true by default, and that can have some security implications for the application&apos;s data)"
        category="Security"
        priority="3"
        summary="Ensure that allowBackup is explicitly set in the application&apos;s manifest"
        explanation="The allowBackup attribute determines if an application&apos;s data can be backed up and restored. It is documented at http://developer.android.com/reference/android/R.attr.html#allowBackup

By default, this flag is set to `true`. When this flag is set to `true`, application data can be backed up and restored by the user using `adb backup` and `adb restore`.

This may have security consequences for an application. `adb backup` allows users who have enabled USB debugging to copy application data off of the device. Once backed up, all application data can be read by the user. `adb restore` allows creation of application data from a source specified by the user. Following a restore, applications should not assume that the data, file permissions, and directory permissions were created by the application itself.

Setting `allowBackup=&quot;false&quot;` opts an application out of both backup and restore.

To fix this warning, decide whether your application should support backup, and explicitly set `android:allowBackup=(true|false)&quot;`"
        url="http://developer.android.com/reference/android/R.attr.html#allowBackup"
        urls="http://developer.android.com/reference/android/R.attr.html#allowBackup"
        errorLine1="    &lt;application android:label=&quot;@string/app_name&quot; android:icon=&quot;@drawable/ic_launcher&quot;>"
        errorLine2="    ^"
        quickfix="adt">
        <location
            file="/home/k/src/projects/mr808/app/src/main/AndroidManifest.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource R.layout.main appears to be unused"
        category="Performance"
        priority="3"
        summary="Looks for unused resources"
        explanation="Unused resources make applications larger and slow down builds.">
        <location
            file="/home/k/src/projects/mr808/app/src/main/res/layout/main.xml"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="[I18N] Hardcoded string &quot;Hello World, Main&quot;, should use @string resource"
        category="Internationalization"
        priority="5"
        summary="Looks for hardcoded text attributes which should be converted to resource lookup"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:

* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)

* The application cannot be translated to other languages by just adding new translations for existing string resources.

In Android Studio and Eclipse there are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="    android:text=&quot;Hello World, Main&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="adt">
        <location
            file="/home/k/src/projects/mr808/app/src/main/res/layout/main.xml"
            line="10"
            column="5"/>
    </issue>

</issues>
